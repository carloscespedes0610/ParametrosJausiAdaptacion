@model IEnumerable<Parametros.Models.VM.clsTipoUsuarioVM>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="box-header with-border">
        <h3 class="box-title">Tipos de Usuario</h3>

        <div class="box-tools pull-right">
            <div class="has-feedback">
                <a class="btn btn-default btn-sm" href="@Url.Action("Create", "TipoUsuario")"> <i class="glyphicon glyphicon-plus"></i></a>
                <a class="btn btn-default btn-sm" href="@Url.Action("Index", "TipoUsuario")"> <i class="fa fa-refresh"></i></a>
                <a class="btn btn-default btn-sm" href="@Url.Action("Report", "TipoUsuario")"> <i class="fa fa-print"></i></a>
            </div>
        </div>
    </div>

    @(Html.DevExtreme().DataGrid<Parametros.Models.VM.clsTipoUsuarioVM>()
        .ID("gridContainer")
        .DataSource(Model)
        .AllowColumnResizing(true)
        .ShowColumnLines(false)
        .ShowRowLines(true)
        .ShowBorders(true)
        .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
        .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
        .Paging(p => p.PageSize(10))
        .Width("100%")
        .RowAlternationEnabled(true)
        .Selection(s => s.Mode(SelectionMode.Single))
        .Editing(e => e.Mode(GridEditMode.Row))
        .OnCellPrepared("onCellPrepared")
        .Columns(columns =>
        {
            columns.AddFor(m => m.TipoUsuarioCod).Width(100);
            columns.AddFor(m => m.TipoUsuarioDes).Width(300);
            columns.AddFor(m => m.EstadoDes).Width(100);

            columns.Add().DataField("Edit").Caption("").Width(30).CellTemplate(Html.ActionLink(" ", "Edit", new { id = "TipoUsuarioId" }, new { @class = "dx-icon-edit" }).ToHtmlString().Replace("TipoUsuarioId", "<%= data.TipoUsuarioId %>"));
            columns.Add().DataField("Delete").Caption("").Width(30).CellTemplate(Html.ActionLink(" ", "Delete", new { id = "TipoUsuarioId" }, new { @class = "dx-icon-trash" }).ToHtmlString().Replace("TipoUsuarioId", "<%= data.TipoUsuarioId %>"));
            columns.Add().DataField("Details").Caption("").Width(30).CellTemplate(Html.ActionLink(" ", "Details", new { id = "TipoUsuarioId" }, new { @class = "fa fa-info-circle" }).ToHtmlString().Replace("TipoUsuarioId", "<%= data.TipoUsuarioId %>"));
        })
    )
</section>

<script>
    function onCellPrepared(e) {
        if (e.rowType === "header") {
            e.cellElement.addClass("columnHeaderCSS");
            e.cellElement.find("input").addClass("columnHeaderCSS");
        }
    }
</script>