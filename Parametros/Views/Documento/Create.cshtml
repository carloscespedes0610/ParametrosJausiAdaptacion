@model Parametros.Models.VM.clsDocumentoVM


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="row">
        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Nuevo Documento</h3>
                </div>

                <div class="box-body">
                    @using (Html.BeginForm())
                    {
                        using (Html.DevExtreme().ValidationGroup())
                        {
                            @Html.AntiForgeryToken();

                            @(Html.DevExtreme().Form<Parametros.Models.VM.clsDocumentoVM>()
                                .ShowValidationSummary(true)
                                
                                .Items(items =>
                                {
                                    items.AddGroup()
                                    .Items(groupItems =>
                                    {

                                        groupItems.AddSimpleFor(m => m.DocCod).Editor(e => e.TextBox().Width("50%"));
                                        groupItems.AddSimpleFor(m => m.DocNem).Editor(e => e.TextBox());
                                        groupItems.AddSimpleFor(m => m.DocDes).Editor(e => e.TextBox());

                                        groupItems.AddSimpleFor(m => m.ModuloId).Editor(e => e.SelectBox().ID("Modulo").DataSource(ViewBag.ModuloId).ValueExpr("ModuloId").DisplayExpr("ModuloDes").SearchEnabled(true).OnValueChanged("onValueChanged")).IsRequired(true);
                                        groupItems.AddSimpleFor(m => m.AplicacionId).Editor(e => e.SelectBox().ID("Aplicacion").DataSource(ViewBag.AplicacionId).ValueExpr("AplicacionId").DisplayExpr("AplicacionDes")).IsRequired(true);


                                        groupItems.AddSimpleFor(m => m.DocIso).Editor(e => e.TextBox());
                                        groupItems.AddSimpleFor(m => m.DocRev).Editor(e => e.TextBox());
                                        groupItems.AddSimpleFor(m => m.DocFec).Editor(e => e.TextBox());
                                        groupItems.AddSimpleFor(m => m.EstadoId).Editor(e => e.SelectBox().DataSource(ViewBag.EstadoId).ValueExpr("EstadoId").DisplayExpr("EstadoDes").Disabled(true));

                                    });
                                })
                                .FormData(Model)
                            )

                            <br>
                            <div Class="box-footer">
                                <Button type="submit" Class="btn btn-primary"><i Class="fa fa-floppy-o"></i></Button>
                                <a href="@Url.Action("Index", "Documento")" Class="btn btn-default"><i Class="fa fa-reply"></i></a>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@if (!ReferenceEquals(ViewBag.MessageErr, null))
{
    @(Html.DevExtreme().Popup()
        .ID("info-popup")
        .Width("auto")
        .Height("auto")
        .ShowTitle(true)
        .Title("Información")
        .Visible(true)
        .DragEnabled(false)
        .CloseOnOutsideClick(true)
        .ContentTemplate(@<text>
            @Html.Raw(ViewBag.MessageErr.Replace(Environment.NewLine, "<br />"))
        </text>)
    )
}

<script>
    function onValueChanged(e) {
        $("#Aplicacion").dxSelectBox("instance").getDataSource().filter(["ModuloId", "=", e.value]);
        $("#Aplicacion").dxSelectBox("instance").getDataSource().reload();
    }
</script>


